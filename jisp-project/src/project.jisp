
;; Project 数据结构
;; 0. project-name: string
;; 1. project-type: string
;; 2. src: string tuple


;; project-name: string -> project-type: string -> srcs: string tuple -> Project
($project-create (λ project-name project-type srcs (
    (tuple project-name project-type srcs) )))
    
;; Project -> name: string
($project-get-name head)

;; Project -> type: string
($project-get-type second)

;; Project -> srcs: string tuple
($project-get-src (nth 2))
    
;; Project -> project-dir: string -> unit
($project-save-config (λ project project-dir (
   ($project-line (concat "project: " (project-get-name project)))
   ($type-line (concat "type: " (project-get-type project)))
   ($src-lines (map (λ src (concat "src: " src)) (project-get-src project)))
   ($merged (concat (tuple project-line type-line) src-lines))
   ($merged (map (λ x (concat x nl)) merged))
   ($merged-text (reduce (λ a b (concat a b)) merged))
   (write-text-file merged-text (concat project-dir "/project.yml"))
)))
 